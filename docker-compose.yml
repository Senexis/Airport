version: '3'
networks:
    rabbitmq: ~

volumes:
    rabbitmq-data: ~

services:
 
    rabbitmq:
        image: rabbitmq:3.7.5-management
        hostname: app-rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
        environment:
            RABBITMQ_ERLANG_COOKIE: 6085e2412b6fa88647466c6a81c0cea0
            RABBITMQ_DEFAULT_USER: rabbitmq
            RABBITMQ_DEFAULT_PASS: rabbitmq
            RABBITMQ_DEFAULT_VHOST: /
        networks:
          - rabbitmq

    baggagemanagement:
        build: 
          context: .
          dockerfile: ./domain/baggagemanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/baggagemanagement:/app
        ports: 
          - 3001:3000
        networks:
          - rabbitmq

    bordermanagement:
        build: 
          context: .
          dockerfile: ./domain/bordermanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/bordermanagement:/app
        ports: 
          - 3002:3002

    checkinmanagement:
        build: 
          context: .
          dockerfile: ./domain/checkinmanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/checkinmanagement:/app
        ports: 
          - 3003:3003

    controlmanagement:
        build: 
          context: .
          dockerfile: ./domain/controlmanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/controlmanagement:/app
        ports: 
          - 3004:3004

    financialmanagement:
        build: 
          context: .
          dockerfile: ./domain/financialmanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/financialmanagement:/app
        ports: 
          - 3005:3000

    flightmanagement:
        build: 
          context: .
          dockerfile: ./domain/flightmanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/flightmanagement:/app
        ports: 
          - 3006:3000

    matrixmanagement:
        build: 
          context: .
          dockerfile: ./domain/matrixmanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/matrixmanagement:/app
        ports: 
          - 3007:3000

    securitymanagement:
        build: 
          context: .
          dockerfile: ./domain/securitymanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/securitymanagement:/app
        ports: 
          - 3008:3000

    spacemanagement:
        build: 
          context: .
          dockerfile: ./domain/spacemanagement/Dockerfile
        restart: always
        environment:
          - PORT=3000
        command: ["/bin/sh", "-c", "npm install && node app.js"]
        volumes:
          - ./domain/spacemanagement:/app
        ports: 
          - 3009:3000


